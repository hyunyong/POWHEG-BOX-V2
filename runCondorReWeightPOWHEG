#!/usr/bin/env python

import os, sys, time

class condorSubmiter:
  def __init__(self,jobName) :
    self.time_ = time.strftime("_%d%b%Y_%HH%MM",time.localtime())
    self.runDir_ = jobName+self.time_
    self.jobName_ = jobName
    os.mkdir(self.runDir_)
    os.chdir(self.runDir_)
    self.tmpSub_ = """executable              = {sh}
universe                = vanilla
accounting_group        = group_cms
requirements            = ( HasSingularity == true )
max_transfer_output_mb  = 5000
request_memory          = 4G 
+SingularityImage       = "/cvmfs/singularity.opensciencegrid.org/opensciencegrid/osgvo-el6:latest"
+SingularityBind        = "/cvmfs, /cms, /share"
output                  = {shN}.out
error                   = {shN}.err
log                     = {shN}.log
transfer_input_files    = {tarBall}, {input}, {lhe}
should_transfer_files   = YES
when_to_transfer_output = ON_EXIT
transfer_output_files   = {out}
queue"""
    self.tmpSh_ = """#!/bin/bash
export MYPWD=`pwd`
export LHAPDFSYS=/cvmfs/cms.cern.ch/slc6_amd64_gcc481/external/lhapdf/6.1.5/
export PATH=$PATH:$LHAPDFSYS/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LHAPDFSYS/lib:/cvmfs/cms.cern.ch/slc6_amd64_gcc481/external/gcc/4.8.1/lib64
export LHAPATH=/cvmfs/cms.cern.ch/slc6_amd64_gcc481/external/lhapdf/6.1.5/share/LHAPDF
tar -xf {tarBall}
rm {tarBall}
mv {input} powheg.input 
mv {lhe} pwgevents.lhe
POWHEG-BOX-V2/dijet/pwhg_main
tt="#new weight,renfact,facfact,pdf1,pdf2"
ev=0
cat pwgevents-rwgt.lhe | while read line
do
  if [[ $line == $tt* ]]; then
    ev=`expr $ev + 1`
    stringarray=($line);
    echo $ev ${{stringarray[2]}} ${{stringarray[3]}} ${{stringarray[4]}} ${{stringarray[5]}} ${{stringarray[6]}} >> reWight.dat
  fi
done
tar -cf {out} reWight.dat pwgevents-rwgt.lhe"""

  def setTarBall(self, tarBall):
    self.tarBall_ = tarBall

  def setInput(self, inPut):
    self.input_ = inPut

  def setLHE(self, lhe):
    self.lhe_ = lhe

  def submit(self, jobNumber):
    shName = self.jobName_+"{:03}.sh".format(jobNumber)
    subName = self.jobName_+"{:03}.sub".format(jobNumber)
    shN = self.jobName_+"{:03}".format(jobNumber)
    out = "out{:03}.tar".format(jobNumber)
    tmpSh = open(shName, "w")
    tmpSh.write(self.tmpSh_.format(**{'tarBall':self.tarBall_.split("/")[-1],'input':self.input_.split("/")[-1], 'lhe':self.lhe_.split("/")[-1], 'out':out}))
    tmpSh.close()
    tmpSub = open(subName, "w")
    tmpSub.write(self.tmpSub_.format(**{'sh':shName, 'shN':shN, 'tarBall':self.tarBall_, 'input':self.input_, 'lhe':self.lhe_, 'out':out}))
    tmpSub.close()
    os.system("chmod +x "+shName)
    os.system("chmod +x "+subName)
    os.system("condor_submit -batch-name "+self.jobName_+" "+subName)

if __name__ == "__main__" :
  lhePath = "/cms/scratch/hyunyong/rivet/src/powheg8TeV/" 
  iPath = os.getcwd()
  #if os.getenv("CMSSW_BASE") == None: 
  #  print "no CMSSW env"
  #  exit()
  reWeight = sys.argv[1].split(".")[0]
  cs = condorSubmiter(reWeight)
  cs.setTarBall(iPath+"/powheg2.tar")
  cs.setInput(iPath+"/{}.input".format(reWeight))
  lheList = [x for x in os.listdir(lhePath) if x.endswith(".lhe")]
  lheList.sort()
  jotNumOffSet = 301
  for i,x in enumerate(lheList):
    cs.setLHE(lhePath+x)
    cs.submit(jotNumOffSet+i)
